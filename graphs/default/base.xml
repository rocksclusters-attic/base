<?xml version="1.0" standalone="no"?>

<graph roll="base">

	<changelog>
	$Log: base.xml,v $
	Revision 1.76  2013/01/17 02:19:51  clem
	Explicitly request system perl dependencies
	
	RPM track perl dependencies using the form
	perl(POD/Simple.pm)
	
	If you install the opt-perl with the perl roll it has a
	opt-perl-POD-Simple-version.rpm which offer perl(POD/Simple.pm)
	even though it sits in another directory from where the system perl
	looks.
	
	So yum install perl opt-perl
	will bring in only opt-perl-POD-Simple which can resolve perl(POD/Simple.pm)
	this will make the system perl broken.
	
	E.G.
	https://www.openfabrics.org/forum/7-installation/192-installation-error-occoured-on-rocks-60centos-62.html
	
	Revision 1.75  2012/10/16 21:20:11  phil
	Link to new google-otp nodes
	
	Revision 1.74  2012/03/26 17:53:57  phil
	Wire yum-extras into the graph
	
	Revision 1.73  2012/03/13 06:07:55  phil
	Now ask for public and then private interfaces
	
	Revision 1.72  2011/11/03 16:32:02  phil
	Getting closer to functional bootstrap on a non-Rocks build host
	
	Revision 1.71  2011/09/23 05:33:56  phil
	Schema must be laid down before security
	
	Revision 1.70  2011/09/06 16:20:14  phil
	From Tim Theissen -- NFS-server should be come before autofs-server
	
	Revision 1.69  2011/08/24 21:59:38  anoop
	Really, really remove foundation-perl and foundation-cpan
	
	Revision 1.68  2011/06/10 19:30:28  anoop
	-All grants now moved to rocks-db-perms.py
	-Changed ordering so that database-security
	 is setup before any database accesses
	-Bug fixes
	
	Revision 1.67  2011/05/12 21:46:30  anoop
	Set security before putting data in. This way the command
	line will function properly
	
	Revision 1.66  2011/05/10 00:53:42  anoop
	Generate random root password for client nodes
	Setup database security through scripts
	
	Revision 1.65  2011/04/07 20:32:15  phil
	One missing tag can ruin your whole install
	
	Revision 1.64  2011/04/06 15:38:17  phil
	Default the yum repository to local, but override this with Attribute
	RepositoryLocal
	
	Revision 1.63  2011/03/27 17:27:30  phil
	Add the development appliance (Imported from 5.4 EC2 Roll)
	
	Revision 1.62  2011/01/03 20:55:41  bruno
	move the login appliance configuration out of the SGE roll and into the Base
	roll.
	
	Revision 1.61  2010/10/21 00:17:34  anoop
	Make the partitioning code part of the linux installation only
	
	Revision 1.60  2010/05/20 00:31:44  bruno
	gonna get some serious 'star power' off this commit.
	
	put in code to dynamically configure the static-routes file based on
	networks (no longer the hardcoded 'eth0').
	
	Revision 1.59  2010/05/17 20:58:21  bruno
	generate firewall rules from the database
	
	Revision 1.58  2010/03/25 00:30:39  bruno
	the start of the login appliance
	
	Revision 1.57  2009/11/18 22:16:56  anoop
	- Big changes to rocks-cpan. Now more accurate.
	- CPAN Support introduced. Builds and installs the
	  necessary infrastucture to get CPANPLUS::Dist::Rocks
	  to function correctly
	- Changes to xml files to include CPAN packages and support
	  infrastructure
	
	Revision 1.56  2009/10/07 21:25:46  mjk
	- added openipmi support
	- from green roll (manual steps removed)
	- default passwd is admin, user can change manually
	
	Revision 1.55  2009/06/01 21:33:52  bruno
	moved apache from 'base' to 'server'
	
	Revision 1.54  2009/05/08 22:12:31  anoop
	Yum, and grub-client should be linux only
	
	Revision 1.53  2009/05/01 23:11:46  bruno
	make sure path to foundation mysql libraries is laid down before the foundation
	mysql functions are called
	
	Revision 1.52  2009/04/29 23:34:57  bruno
	gettin' close
	
	Revision 1.51  2009/04/28 20:59:01  bruno
	configure yum on all nodes.
	
	the yum repository is the frontend
	
	Revision 1.50  2009/03/25 17:55:40  bruno
	add yum to client nodes
	
	Revision 1.49  2009/03/24 22:09:02  bruno
	nuke labels
	
	Revision 1.48  2009/03/21 22:22:54  bruno
	 - lights-out install of VM frontends with new node_rolls table
	 - nuked 'site' columns and tables from database
	 - worked through some bugs regarding entities
	
	Revision 1.47  2009/03/13 00:02:59  mjk
	- checkpoint for route commands
	- gateway is dead (now a default route)
	- removed comment rows from schema (let's see what breaks)
	- removed short-name from appliance (let's see what breaks)
	- dbreport static-routes is dead
	
	Revision 1.46  2009/03/04 20:15:30  bruno
	moved 'dbreport hosts' and 'dbreport resolv' into the command line
	
	Revision 1.45  2009/02/11 19:50:34  bruno
	nuke unneeded nodes
	
	Revision 1.44  2009/01/22 18:57:56  mjk
	removed database-security
	
	Revision 1.43  2009/01/08 23:36:01  mjk
	- rsh edge is conditional (no more uncomment crap)
	- add global_attribute commands (list, set, remove, dump)
	- attributes are XML entities for kpp pass (both pass1 and pass2)
	- attributes are XML entities for kgen pass (not used right now - may 
	go away)
	- some node are now interface=public
	
	Revision 1.42  2008/12/23 02:44:06  mjk
	removed ia64 edges
	
	Revision 1.41  2008/08/07 20:43:14  bruno
	store the partitions of the frontend in the database
	
	Revision 1.40  2008/07/29 16:48:04  bruno
	save the frontend's partitions in the database.
	
	Revision 1.39  2008/07/22 00:34:40  bruno
	first whack at vlan support
	
	Revision 1.38  2008/04/25 22:22:57  bruno
	fixes for V
	
	Revision 1.37  2008/04/17 18:34:29  bruno
	add a nas-partition XML node to the framework
	
	Revision 1.36  2008/02/19 23:20:24  bruno
	katz made me do it.
	
	Revision 1.35  2008/02/14 22:46:40  bruno
	media XML node is no longer needed
	
	Revision 1.34  2007/12/13 02:53:40  bruno
	can now build a bootable kernel CD and build a physical frontend with V
	on RHEL 5 update 1
	
	Revision 1.33  2007/12/10 21:28:32  bruno
	the base roll now contains several elements from the HPC roll, thus
	making the HPC roll optional.
	
	this also includes changes to help build and configure VMs for V.
	
	Revision 1.32  2007/06/30 01:09:26  phil
	Restore IP connecivity during the post if kickstarting a frontend over
	the detected eth0 network
	
	Revision 1.31  2007/04/30 22:03:12  bruno
	more pxe first support
	
	Revision 1.30  2006/07/21 02:50:52  phil
	rocks-pxe helper function support
	
	Revision 1.29  2006/07/11 21:17:54  bruno
	screen cleanup
	
	Revision 1.28  2006/07/07 20:12:36  bruno
	removed upgrade node -- now handled by restore roll
	
	Revision 1.27  2006/07/05 17:40:36  bruno
	sql statements were added to the server.xml node file, so make sure the
	server node is ordered after the database setup nodes.
	
	Revision 1.26  2006/06/21 03:09:52  bruno
	updates to put the frontend networking info in the database just like
	a compute node
	
	Revision 1.25  2006/06/05 22:06:29  bruno
	moved insert-rolls from hpc to base
	
	Revision 1.24  2006/06/05 21:54:50  bruno
	moved PXE from hpc to base
	
	Revision 1.23  2006/06/05 17:57:32  bruno
	first steps towards 4.2 beta
	
	Revision 1.22  2006/05/24 19:52:52  phil
	Add ethers-server-postshell processing to rewrite ethernet configuration
	
	Revision 1.21  2006/01/20 20:07:32  bruno
	correct console support for multi-byte character sets
	
	Revision 1.20  2005/10/11 05:36:19  phil
	Probe the ethernet hardware on the frontend and put it into the database
	
	Revision 1.19  2005/09/27 19:32:06  bruno
	put 'routes-server' on the tail of database-security. this ensures the
	database is fully configured and dbreport will be able to run.
	
	Revision 1.18  2005/09/22 03:21:08  phil
	create static-routes with a dbreport
	
	Revision 1.17  2005/09/02 23:41:33  bruno
	make sure the foundation is configured before calling dbreport
	
	Revision 1.16  2005/07/20 23:09:17  mjk
	fixed foundation name
	
	Revision 1.15  2005/07/11 22:00:49  mjk
	added foundation to graph
	
	Revision 1.14  2005/05/25 03:29:24  bruno
	need to ensure that all nodes that call 'dbreport' are after
	database-security
	
	Revision 1.13  2005/05/23 23:59:20  fds
	Frontend Restore
	
	Revision 1.12  2005/04/01 15:37:10  bruno
	disable yum
	
	Revision 1.11  2005/03/31 04:13:25  phil
	for Bruno ... because if it isn't in CVS it does not exist
	
	Revision 1.10  2005/03/12 07:35:18  bruno
	put python-development before base -- this ensures that rocksrc-modify
	will be able to import its rocks pylib files
	
	Revision 1.9  2005/03/12 00:01:49  bruno
	minor checkin
	
	Revision 1.8  2005/03/04 01:40:04  mjk
	massive graph cleanup
	
	Revision 1.7  2005/03/02 20:57:27  mjk
	bad node name
	
	Revision 1.6  2005/03/01 17:51:06  mjk
	compilers like scripting - small tweak
	
	Revision 1.5  2005/03/01 17:34:58  mjk
	move 411 to hpc
	
	Revision 1.4  2005/03/01 02:26:01  mjk
	we do not thin the OS anymore
	
	Revision 1.3  2005/03/01 00:22:24  mjk
	moved to base roll
	
	</changelog>

	<description>

	Default Graph for Rocks.

	</description>


	<!-- Graph Ordering for Kickstart Generation -->

	<order tail="HEAD">
		<head>partitions-save</head>
		<head>python-development</head>
		<head>rlo</head>
	</order>

	<order head="python-development">
		<tail>base</tail>
	</order>

	<order head="compute-appliance">
		<tail>base</tail>
	</order>

	<order head="TAIL">
		<tail>install</tail>
		<tail>postshell</tail>
		<tail>pxeboot</tail>
		<tail>nas</tail>
		<tail>compute</tail>
		<tail>partitions-save-server</tail>
	</order>

	<order head="postshell">
		<tail>ethers-server-postshell</tail>
	</order>

	<order head="node" tail="database-data"/>

	<order head="syslog" tail="syslog-client"/>

	<order head="foundation-server">
		<tail>database</tail>
	</order>

	<order head="database">
		<tail>database-schema</tail>
	</order>

	<order head="database-schema">
		<tail>database-data</tail>
	</order>

	<order head="database-schema">
		<tail>database-sec</tail>
	</order>

	<order head="database-sec">
		<tail>database-data</tail>
	</order>

	<order head="database-data">
		<tail>rocks-dist</tail>
		<tail>install</tail>
		<tail>routes-client</tail>
		<tail>routes-server</tail>
		<tail>insert-rolls</tail>
		<tail>server</tail>
		<tail>pxe</tail>
		<tail>networking-server</tail>
		<tail>dhcp-server</tail>
		<tail>dns-server</tail>
		<tail>login-server</tail>
		<tail>devel-server</tail>
	</order>

	<order head="database-sec">
		<tail>devel-appliance</tail>
	</order>

	<order tail="server-firewall">
		<head>networking-server</head>
		<head>database-data</head>
	</order>

	<order tail="client-firewall">
		<head>networking-client</head>
	</order>

	<order head="grub">
		<tail>grub-client</tail>
		<tail>grub-server</tail>
	</order>

	<order head="ca">
		<tail>ssl-client</tail>
		<tail>ssl-server</tail>
		<tail>central</tail>
	</order>

	<order head="apache">
		<tail>database</tail>
	</order>

	<order head="firewall">
		<tail>client-firewall</tail>
		<tail>server-firewall</tail>
	</order>

	<order head="partition">
		<tail>do-partition</tail>
	</order>

	<order head="nas-partition">
		<tail>do-partition</tail>
	</order>

	<order head="yum">
		<tail>devel-appliance</tail>
		<tail>yum-extras</tail>
	</order>

	<order head="nfs-server">
		<tail>autofs-server</tail>
	</order>

	<!-- order the screens -->
	<order head="screen-clusterinfo">
		<tail>screen-network-public</tail>
	</order>
	<order head="screen-network-public">
		<tail>screen-network-private</tail>
	</order>
	<order head="screen-network-private">
		<tail>screen-network-misc</tail>
	</order>
	<order head="screen-network-misc">
		<tail>screen-root-password</tail>
	</order>
	<order head="screen-root-password">
		<tail>screen-timezone</tail>
	</order>
	<order head="screen-timezone">
		<tail>screen-partitioning</tail>
	</order>

	<!-- Graph OO Framework -->

	<edge from="bootstrap-packages">
		<to>bootstrap-dummy</to>
	</edge>

	<edge from="compute">
		<to>compute-appliance</to>
	</edge>

	<edge to="client">
		<from>compute-appliance</from>
	</edge>

	<edge from="server">
		<to>server-rootpw</to>
	</edge>

	<edge from="client">
		<to>client-rootpw</to>
	</edge>

	<edge from="nas">
		<to>nas-appliance</to>
		<to>nas-exports</to>
		<to>nas-partition</to>
		<to>client</to>
	</edge>

	<edge from="login">
		<to>google-otp</to>
		<to>client</to>
	</edge>

	<edge from="devel-appliance">
		<to>client</to>
		<to>foundation-server</to>
		<to>devel</to>
		<to>rocks-dist</to>
		<to>database</to>
		<to>x11</to>
		<to>snmp-client</to>
		<to>rocks-devel</to>
	</edge>

	<edge from="base">
		<to>ipmi-base</to>
		<to>foundation-base</to>
		<to>autofs</to>
		<to>auto-kickstart</to>
		<to>snmp-server</to>
		<to>syslog</to>
		<to>security</to>
		<to>disk-stamp</to>
		<to>grub</to>
		<to>ip-diag</to>
		<to>logrotate</to>
		<to>rpc</to>
		<to>scripting</to>
		<to>node</to>
		<to>ntp</to>
		<to>firewall</to>
		<to>selinux</to>
		<to>postshell</to>
		<to>i18n</to>
		<to>411-base</to>
		<to>mail</to>
		<to os="linux">partition</to>
		<to os="linux">yum</to>
		<to os="linux">yum-extras</to>
	</edge>

	<edge from="client" to="x11" cond="x11"/>

	<edge from="server">
		<to>ipmi-server</to>
		<to>apache</to>
		<to>foundation-server</to>
		<to>base</to>
		<to>devel</to>
		<to>rocks-dist</to>
		<to>security-server</to>
		<to>ntp-server</to>
		<to>autofs-server</to>
		<to>database</to>
		<to>grub-server</to>
		<to>install</to>
		<to>x11</to>
		<to>snmp-client</to>
		<to>pxe</to>
		<to>insert-rolls</to>
		<to>rlo</to>
		<to>nfs-server</to>
		<to>networking-server</to>
		<to>411-server</to>
		<to>dhcp-server</to>
		<to>dns-server</to>
		<to>mail-server</to>
		<to>rocks-devel</to>
		<to>syslog-server</to>
		<to>server-firewall</to>
		<to>partitions-save-server</to>
		<to>routes-server</to>
		<to>login-server</to>
		<to>devel-server</to>
		<to>google-otp-server</to>
		<to>google-otp</to>
	</edge>

	<edge from="server">
		<to>screen-clusterinfo</to>
		<to>screen-network-public</to>
		<to>screen-network-private</to>
		<to>screen-network-misc</to>
		<to>screen-root-password</to>
		<to>screen-timezone</to>
		<to>screen-partitioning</to>
	</edge>

	<edge from="client">
		<to>ipmi-client</to>
		<to>foundation-client</to>
		<to>dhcp-client</to>
		<to>base</to>
		<to>security-client</to>
		<to>ntp-client</to>
		<to>syslog-client</to>
		<to>autofs-client</to>
		<to os="linux">grub-client</to>
		<to>pxeboot</to>
		<to>networking-client</to>
		<to>411-client</to>
		<to>mail-client</to>
		<to>node-certs</to>
		<to>resolv</to>
		<to>shared-memory</to>
		<to>client-firewall</to>
		<to os="linux">partitions-save</to>
		<to>routes-client</to>
	</edge>

	<edge from="security-client">
		<to>ssl-client</to>
		<to>ssh-client</to>
	</edge>

	<edge from="security-server">
		<to>ssl-server</to>
		<to>ca</to>
		<to>central</to>
	</edge>

	<edge from="security">
		<to>ssl</to>
		<to>ssh</to>
	</edge>

	<edge from="partition">
		<to os="linux">do-partition</to>
	</edge>

	<edge from="compilers">
		<to>c-development</to>
		<to>fortran-development</to>
	</edge>

	<edge from="devel">
		<to>cdr</to>
		<to>emacs</to>
		<to>docbook</to>
		<to>compilers</to>
	</edge>

	<edge from="scripting">
		<to>perl-development</to>
		<to>perl-modules</to>
		<to>python-development</to>
		<to>tcl-development</to>
	</edge>

	<edge from="database">
		<to>database-schema</to>
		<to>database-sec</to>
		<to>database-data</to>
	</edge>
	
	<edge from="wan" to="null"/>

	<edge from="postshell"   to="ethers-server-postshell"/>

        <edge from="client" cond="rsh">
                <to>rsh</to>
        </edge>

</graph>

