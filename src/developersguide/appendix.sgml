<appendix id="appendix-b" xreflabel="node-xml-syntax">
        <title>XML File Syntax</title>

<para>
Rocks generates kickstart files for compute nodes dynamically using a structure
called the "kickstart graph".
This graph is made from edges and nodes, both described in an XML language.
This section serves as a reference for the XML tags and attributes.
</para>

<para>
A traversal of the kickstart nodes and edges makes a full kickstart file used
to specify the software and configuration for a node.
Edges are described in "graph" files, while each node is specified in a
"node" file. 
</para>

<para>
When the order of nodes' contribution to the kickstart file matters, we use
special edges made with <constant>&lt;order&gt;</constant> tags.
We describe these tags in this section as well.
</para>


<section id="node-xml-tags" xreflabel="Node XML Tags">
<title>Node XML Tags</title>

<itemizedlist>

<listitem>

<para>
<command>&lt;kickstart&gt;</command>
</para>

<para>
Wraps an XML node file.
</para>

</listitem>


<listitem>
<para>
<command>&lt;description&gt;</command>
</para>

<para>
Text description of what this node does.
</para>
</listitem>


<listitem>
<para>
<command>&lt;copyright&gt;</command>
</para>

<para>
Text description of the copyright associated with this node file.
</para>
</listitem>


<listitem>
<para>
<command>&lt;changelog&gt;</command>
</para>

<para>
Text description of the changes made to this node file. Generally a "Log"
CVS directive.

</para>
</listitem>


<listitem>
<para>
<command>&lt;package&gt;</command>
</para>

<para>
Specifies a single RPM package. Includes only the RPM name, not its version or
release number. 

</para>

<variablelist>

<varlistentry>
<term>type</term>
<listitem>

<para>
Optional. Value is "meta". Used to describe RedHat meta packages.
</para>

<para>
Example:
<constant><![CDATA[<package type="meta">gnome-desktop</package>]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>disable</term>
<listitem>
<para>
Optional. If this value is non-zero, the RPM will not be installed.
</para>

<para>
Example:
<constant><![CDATA[<package disable="1">emacs</package>]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>arch</term>
<listitem>
<para>
Optional.
This value can be "i386" or "x86_64".
If "arch" matches the architecture of the host that is being installed, then
the package will be installed, otherwise the package will be skipped.
For example, if the value is "i386" and if the x86_64 version of Rocks is
being installed on a host, then the package will be skipped.
Or said another way, the package will only be installed on i386 hosts.
</para>

<para>
Example:
<constant><![CDATA[<package arch="i386">nasm</package>]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>os</term>
<listitem>
<para>
Optional.
Value is "linux" or "sunos".
If this is specified, then the package will only be installed on 
the specified OS.
For example, if "linux" is specified, then the package will only be installed
on Linux hosts (and the package will not be installed on Solaris hosts).
</para>

<para>
Example:
<constant><![CDATA[<package os="linux">]]></constant>.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>cond</term>
<listitem>
<para>
Optional.
If the value of the "cond" is true, then this package will be installed.
Values can be Rocks attributes or generic python expressions.
</para>

<para>
Example:
<constant><![CDATA[<post cond="rocks_version_major >= 6">]]></constant>.
</para>

<para>
If the installed Rocks version is greater or equal than 6 then
the package will be installed otherwise not. See &lt;post&gt; section 
below for more example.
</para>

</listitem>
</varlistentry>


</variablelist>
</listitem>


<listitem>
<para>
<command>&lt;eval&gt;</command>
</para>

<para>
Replaced with the output of the script specified between these tags. The script
is run on the host generating the kickstart file (generally the frontend).

</para>

<variablelist>

<varlistentry>
<term>shell</term>
<listitem>
<para>
Optional. Specifies the script interpreter to use. Default "sh".
</para>

<para>
Example:
<constant><![CDATA[<eval shell="/bin/bash">]]></constant>.
</para>

<para>
Example:
<constant><![CDATA[<eval shell="/opt/rocks/bin/python">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>mode</term>
<listitem>
<para>
Optional.
Value is "quote" or "xml".
If value is "quote", XML characters are escaped in the shell output.
Default is "quote".
</para>

<para>
Example:
<constant><![CDATA[<eval mode="xml">]]></constant>.
</para>

<para>
Example:
<constant><![CDATA[<eval shell="/bin/bash" mode='xml'>]]></constant>.
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>


<listitem>
<para>
<command>&lt;post&gt;</command>
</para>

<para>
Wraps a post section.
Configuration is generally carried out in
post sections, making this a popular tag.
The commands specified here
correspond to an RPM post section, and they are executed on the client machine
(not on the frontend, in contrast to the <constant>&lt;eval&gt;</constant> tag).
</para>

<variablelist>

<varlistentry>
<term>arch</term>
<listitem>

<para>
Optional.
This value can be "i386" or "x86_64".
If "arch" matches the architecture of the host that is being installed, then
this post section will be run, otherwise the post section will be skipped.
</para>

<para>
Example:
<constant><![CDATA[<post arch="i386">]]></constant>.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>os</term>
<listitem>
<para>
Optional.
Value is "linux" or "sunos".
If this is specified, then the post section will only be run during the
installation of the specified OS.
For example, if "linux" is specified, then the post section will be run when
a Linux host is installed, but the post section will not be run when a Solaris
host is installed.
</para>

<para>
Example:
<constant><![CDATA[<post os="linux">]]></constant>.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>cond</term>
<listitem>
<para>
Optional.
If the value of the "cond" is true, then this post section will be executed.
Values can be Rocks attributes or generic python expressions.
</para>

<para>
Example:
<constant><![CDATA[<post cond="submit_host">]]></constant>.
</para>

<para>
If the "submit_host" Rocks attribute is set to "true" for this host, then
the post section will be executed, otherwise, this post section will be
skipped.
</para>

<para>
Example:
<constant><![CDATA[<post cond="not ssh_use_dns">]]></constant>.
</para>

<para>
If the "ssh_use_dns" Rocks attribute is set to "false" for this host, then
the post section will be executed (because of the python "not" operator).
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>interpreter</term>
<listitem>
<para>
Optional. Specifies the script interpreter to use. Default "/bin/bash".
</para>

<para>
Example:
<constant><![CDATA[<post interpreter="/opt/rocks/bin/python">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>arg</term>
<listitem>
<para>
Optional.
Value can be "--nochroot".
The "--nochroot" value means run this post section in the context of the
installer, not in the context of the installing machine.
The installer runs on a ramdisk on an installing machine, so if this argument
is supplied, then the post section has access to the ramdisk file system as
well as the mounted file systems for the installing node.
</para>

<para>
Example:
<constant><![CDATA[<post arg="--nochroot">]]></constant>.
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>

<listitem>
<para>
<command>&lt;pre&gt;</command>
</para>

<para>
Wraps the pre section commands.
All pre sections run before package installation, in contrast to
commands from the post section.
All pre sections are run in the context of the installation environment, that
is, the root file system is a ramdisk.
</para>

<para>
The &lt;pre&gt; section supports the same attributes as the &lt;post&gt; section, please refer to the 
documentation above for a detailed description.
</para>

</listitem>

  <listitem>
  <para>
  <command>&lt;configure&gt;</command>
  </para>

  <para>
  The configure tag (introduced in Rocks 6.2) contains a snipped of
  code which should be executed to configure a particular software,
  exactly like the &lt;pre&gt; and &lt;post&gt; tag.
  Although configure must specify when the code snipped should be executed using
  the attribute phase.
  </para>

  <para>
  This tag support the same attributes as the &lt;post&gt; section, please refer to the
  documentation above for a detailed description.
  </para>

  <variablelist>

      <varlistentry>
      <term>phase</term>
      <listitem>

      <para>
      Required. It is a comma separated list of phases in which the code should be executed.
      Supported phases are: pre (which behaves exactly as for the &lt;pre&gt; tag),
      post (it behaves exactly as for the &lt;post&gt; tag) and reconfigure which is
      executed only during a reconfiguration (see the userguide).
      </para>

      <para>
      Example:
      <constant><![CDATA[<configure phase="post">]]></constant> is the same as using the
      tag <constant><![CDATA[<post>]]></constant>
      </para>

      </listitem>
      </varlistentry>
  </variablelist>
  </listitem>


<listitem>
<para>
<command>&lt;file&gt;</command>
</para>

<para>
Wraps the contents of a file.
</para>

<variablelist>

<varlistentry>
<term>name</term>
<listitem>

<para>
Required. Specifies the name of this file, a full path. 
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/auto.master">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>mode</term>
<listitem>

<para>
Optional.
Value is "append".
If "append" is specified,
the contents are appended to the end of an existing file.
A record of the change is kept in a RCS
repository in the same directory as the file.
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/man.config" mode="append">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>rcs</term>
<listitem>

<para>
Optional.
This flag can disable tracing the file with Revision Control System.
By the default all files are under RCS but if rcs=false it will disable 
revisioning.
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/modprobe.d/netloop.conf" rcs="false">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>owner</term>
<listitem>
<para>
Optional.
The "user.group" that owns this file.
Can be specified either as names "root.root" or numbers (guids) "0.0".
</para>

<para>
Example:
<constant><![CDATA[<file name="/var/www/html/index.html" owner="root.apache">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>perms</term>
<listitem>
<para>
Optional.
The permissions of this file.
The value of this argument is passed to the "chmod" command, and accepts the
same format.
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/ssh/ssh_host_key.pub" perms="0444">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>vars</term>
<listitem>
<para>
Optional.
Value is "literal" or "expanded".
If "literal" no variable or backtick expansion is done on the contents of the
file.
If value is "expanded", standard shell variable expansion is performed, as
well as running commands quoted with backticks.
Default is "literal".
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/motd" mode="append" vars="expanded">]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>expr</term>
<listitem>
<para>
Optional.
Specifies a command whose output is placed in the file.
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/dhcpd.conf" expr="/opt/rocks/bin/rocks report host dhcpd"/>]]></constant>.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>os</term>
<listitem>

<para>
Optional.
Value is "linux" or "sunos".
If this is specified, then the file will only be created (or appended to )
run during the installation of the specified OS.
</para>

<para>
Example:
<constant><![CDATA[<file name="/etc/postfix/main.cf" mode="append" os="sunos">]]></constant>.
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>

</itemizedlist>


<section id="node-main-xml" xreflabel="Node XML: Main Commands">
<title>Kickstart Main Section</title>

<para>
These tags specify commands in the "main" section of a kickstart file.
Each of these tags are wrapped in <constant>&lt;main&gt;</constant> tags.
They appear in node XML files.
Only the
tags normally used in a cluster appliance kickstart file are presented here; for
a full reference of all the kickstart options and their respective arguments,
see
<ulink url="http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5/html-single/Installation_Guide/index.html#ch-kickstart2">RHEL5 Documentation - Kickstart Installations</ulink>.
</para>

<para>
<command>&lt;main&gt;</command>
</para>

<itemizedlist>

<listitem>
<para>
<command>&lt;bootloader&gt;</command>
</para>

<para>
Specifies the bootloader arguments. Default "--location=mbr"
</para>

</listitem>


<listitem>
<para>
<command>&lt;interactive&gt;</command>
</para>

<para>
Optional. Allows for inspection and modification of the kickstart values given,
via the snack screen interface. Default: present.
</para>

</listitem>

<listitem>
<para>
<command>&lt;url&gt;</command>
</para>

<para>
Specifies the installation method with the <literal>--url</literal> argument.
Default is 
<constant><![CDATA[http://&Kickstart_PrivateKickstartHost;/&Kickstart_PrivateKickstartBasedir;/&distribution;/&arch;]]></constant>,
and when the kickstart file is
generated, all the attributes are substituted with their respective values.
</para>

</listitem>

<listitem>
<para>
<command>&lt;lang&gt;</command>
</para>

<para>
The installation language to use. Default "en_US".
</para>

</listitem>

<listitem>
<para>
<command>&lt;keyboard&gt;</command>
</para>

<para>
Sets the system keyboard type. Default "us".
</para>

</listitem>

<listitem>
<para>
<command>&lt;mouse&gt;</command>
</para>

<para>
Specifies the system mouse type. Default "none".
</para>

</listitem>

<listitem>
<para>
<command>&lt;timezone&gt;</command>
</para>

<para>
Required. Sets the system timezone.
The default is the timezone selected when a frontend is installed.
</para>

</listitem>

<listitem>
<para>
<command>&lt;install&gt;</command>
</para>

<para>
If present, perform a fresh install (not an upgrade). Default: present.
</para>

</listitem>

<listitem>
<para>
<command>&lt;rootpw&gt;</command>
</para>

<para>
Optional.
Set the root password for the installing system.
Default is 
<constant><![CDATA[<rootpw>--iscrypted &Kickstart_PrivateRootPassword;</rootpw>]]></constant>,
and when the kickstart file is
generated, the attribute is substituted with its respective value.
</para>

</listitem>


</itemizedlist>

</section>

</section>

<section id="graph-xml" xreflabel="Graph XML Tags">
<title>Graph XML Tags</title>

<para>
Edges in the kickstart graph are specified with the XML tags below. Order
tags give control of the graph traversal (the order nodes appear in the final 
kickstart file). 
</para>

<para>
Both the edge and order tags appear in kickstart graph files.
</para>

<itemizedlist>

<listitem>
<para>
<command>&lt;graph&gt;</command>
</para>

<para>
Wraps an XML graph file.
</para>

</listitem>


<listitem>
<para>
<command>&lt;description&gt;</command>
</para>

<para>
Text description of what this part of the graph does.
</para>
</listitem>


<listitem>
<para>
<command>&lt;copyright&gt;</command>
</para>

<para>
Text description of the copyright associated with this graph file.
</para>
</listitem>



<listitem>
<para>
<command>&lt;changelog&gt;</command>
</para>

<para>
Text description of the changes made to this node file. Generally a "Log"
CVS directive.
</para>
</listitem>


<listitem>
<para>
<command>&lt;edge&gt;</command>
</para>

<para>
Specifies an edge in the kickstart graph, links graph nodes together.
Can be specified as a singleton tag: 
</para>

<para>
<constant><![CDATA[<edge from="base" to="ganglia"/>]]></constant>,
or a standard tag that wraps <constant>&lt;to&gt;</constant> or
<constant>&lt;from&gt;</constant> tags.
</para>

<variablelist>

<varlistentry>
<term>from</term>
<listitem>
<para>
Optional.
Specifies the beginning of an edge, a node name.
</para>

<para>
Example:
<constant><![CDATA[<edge from="server">]]></constant>.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>to</term>
<listitem>
<para>
Optional.
Specifies the end of an edge, a node name.
</para>

<para>
Example:
<constant><![CDATA[<edge to="client">]]></constant>.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>cond</term>
<listitem>
<para>
Optional.
If the value of the "cond" is true, then this edge will be traversed.
Values can be Rocks attributes or generic python expressions.
</para>

<para>
Example:
<constant><![CDATA[<edge from="client" to="x11" cond="x11"/>]]></constant>.
</para>

<para>
If the "x11" Rocks attribute is set to "true", then this edge will be
traversed.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>arch</term>
<listitem>
<para>
Optional.
Specifies which architectures should follow this edge.
Same format as arch attribute in node files.
The edge is ignored if the client's architecture does not match this list.
</para>

<para>
Example:
<constant><![CDATA[<edge from="client" to="x11" arch="x86_64"/>]]></constant>.
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>


<listitem>
<para>
<command>&lt;to&gt;</command>
</para>

<para>
Wraps a node name.
Specifies the end of a directed edge in the graph.
Used inside an edge tag with the "from" attribute:
</para>

<para>
<screen>
<![CDATA[<edge from="compute">
	<to>compute-appliance</to>
</edge>]]>
</screen>
</para>


<variablelist>

<varlistentry>
<term>arch</term>
<listitem>
<para>
Optional.
Specifies which architectures should follow this edge.
The entire edge is ignored if the client's architecture does not match this
list.
</para>

<para>
Example:
<constant><![CDATA[<to arch="i386">pvm</to>]]></constant>.
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>


<listitem>
<para>
<command>&lt;from&gt;</command>
</para>

<para>
Wraps a node name. Specifies the beginning of a directed edge. Used like 
"to" tag.
</para>

<para>
<screen>
<![CDATA[<edge to="client">
        <from>compute-appliance</from>
</edge>]]>
</screen>
</para>


<variablelist>

<varlistentry>
<term>arch</term>
<listitem>
<para>
Optional. Specifies which architectures should follow this edge. The entire
edge is ignored if the client's architecture does not match this list.

</para>
</listitem>
</varlistentry>

</variablelist>
</listitem>


<listitem>
<para>
<command>&lt;order&gt;</command>
</para>

<para>
Specifies a ordering between nodes in the graph.
While the <constant>&lt;edge&gt;</constant> tags specify a "membership" in the
kickstart file, the <constant>&lt;order&gt;</constant> tags give a
"relative ordering" between nodes. 
</para>

<para>
The ordering is affected by a topological sort of nodes using order edges.
While the kickstart graph allows cycles, the set of order tags must specify a
directed-acyclic graph (DAG).
Any nodes not touched by an order edge have a random order in the resultant
kickstart file.
</para>

<para>
Can be used to wrap <constant>&lt;head&gt;</constant> and
<constant>&lt;tail&gt;</constant> tags in the same fashion as
the <constant>&lt;to&gt;</constant> and
<constant>&lt;from&gt;</constant> tags for "edge".
</para>

<variablelist>

<varlistentry>
<term>arch</term>
<listitem>
<para>
Optional. Specifies which architectures should follow this edge. Same format as
arch attribute in node files. The edge is ignored if the client's architecture
does not match this list.
</para>
</listitem>
</varlistentry>


<varlistentry>
<term>head</term>
<listitem>
<para>
Optional.
Specifies the beginning of this edge, a node name.
The node specified by the <constant>&lt;order head="node"&gt;</constant>
tag should be ordered before all child <constant>&lt;tail&gt;</constant> tags.
</para>

<para>
<screen>
<![CDATA[<order head="grub">
	<tail>grub-client</tail>
	<tail>grub-server</tail>
</order>]]>
</screen>
</para>

<para>
Special name "TAIL" is allowed, which specifies the node be placed last.
Ordering among nodes with TAIL ordering is undefined.
</para>

<para>
<screen>
<![CDATA[<order head="TAIL">
	<tail>install</tail>
	<tail>pxeboot</tail>
	<tail>compute</tail>
</order>]]>
</screen>
</para>

<para>
In the above example, the node files are "install", "pxeboot" and "compute"
will all be at the end of the kickstart file.
</para>

</listitem>
</varlistentry>


<varlistentry>
<term>tail</term>
<listitem>
<para>
Optional.
Specifies the end of this edge, a node name.
The node specified by the <constant>&lt;order tail="node"&gt;</constant>
tag should be ordered after all child <constant>&lt;head&gt;</constant> tags.
</para>

<para>
<screen>
<![CDATA[<order tail="server-firewall">
	<head>networking-server</head>
	<head>database-data</head>
</order>]]>
</screen>
</para>

<para>
Special node name "HEAD" is allowed, which specifies the node is placed at
the beginning of the kickstart file.
Ordering among nodes with HEAD ordering is undefined.
</para>

<para>
<screen>
<![CDATA[<order tail="HEAD">
	<head>python-development</head>
	<head>rlo</head>
</order>]]>
</screen>
</para>

</listitem>
</varlistentry>

</variablelist>
</listitem>

<listitem>
<para>
<command>&lt;head&gt;</command>
</para>

<para>
Wraps a node name.
This tag is a child of an
<constant>&lt;order tail="some-node-name"&gt;</constant> tag.
All nodes wrapped by <constant>&lt;head&gt;</constant> tags are guaranteed
to execute prior to the node specified in the 
<constant>&lt;order tail="some-node-name"&gt;</constant> tag.
</para>

<para>
<screen>
<![CDATA[<order tail="server-firewall">
	<head>networking-server</head>
	<head>database-data</head>
</order>]]>
</screen>
</para>

<para>
In the example above, "networking-server" and "database-data" are guaranteed
to execute before "server-firewall".
</para>

</listitem>


<listitem>
<para>
<command>&lt;tail&gt;</command>
</para>

<para>
Wraps a node name.
This tag is a child of an
<constant>&lt;order head="some-node-name"&gt;</constant> tag.
All nodes wrapped by <constant>&lt;tail&gt;</constant> tags are guaranteed
to execute after to the node specified in the 
<constant>&lt;order head="some-node-name"&gt;</constant> tag.
</para>

<para>
<screen>
<![CDATA[<order head="grub">
	<tail>grub-client</tail>
	<tail>grub-server</tail>
</order>]]>
</screen>
</para>

<para>
In the example above, "grub-client" and "grub-server" are guaranteed
to execute after "grub".
</para>

</listitem>

</itemizedlist>

</section>

</appendix>
