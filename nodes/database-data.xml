<?xml version="1.0" standalone="no"?>


<kickstart interface="public">

  <description>

  Populate cluster database with initial data

  </description>

        <copyright>
        Copyright (c) 2000 - 2014 The Regents of the University of California.
        All rights reserved. Rocks(r) v6.1.1 www.rocksclusters.org
        
        </copyright>

<changelog>
  $Log: database-data.xml,v $
  Revision 1.76  2012/05/06 05:48:10  phil
  Copyright Storm for Mamba

  Revision 1.75  2012/03/15 17:05:43  phil
  Support single interface frontends

  Revision 1.74  2012/03/13 06:04:14  phil
  Support user selecting public and private interfaces on frontend

  Revision 1.73  2011/07/23 02:30:14  phil
  Viper Copyright

  Revision 1.72  2011/06/21 23:27:06  anoop
  Store only kickstartrootpassword in site.attrs
  Remove KickstartRootPassword when moving site.attrs
  to local disk

  Revision 1.71  2011/06/10 19:30:28  anoop
  -All grants now moved to rocks-db-perms.py
  -Changed ordering so that database-security
   is setup before any database accesses
  -Bug fixes

  Revision 1.70  2011/05/26 23:19:35  phil
  use unambiguous add host command.

  Revision 1.69  2011/05/12 18:19:21  anoop
  dbhost set for all clients except devel-servers.
  Needs to be made more generic to support all
  database installs.

  Database Security now set programmatically.
  All users have "SELECT" access on some tables
  apache has few more privs on some tables
  Root has all access to all.

  All passwords are random.

  Revision 1.68  2010/09/20 20:22:50  bruno
  use the 'primary_net' attribute to dictate which interface should be used
  as the 'primary'. we'll get the domain name from the subnets table and we'll
  set the hostname accordingly.

  Revision 1.67  2010/09/07 23:52:46  bruno
  star power for gb

  Revision 1.66  2010/08/02 20:35:44  bruno
  make sure the password attributes have their values placed in the 'shadow'
  column.

  Revision 1.65  2010/07/09 23:19:58  bruno
  fix

  Revision 1.64  2010/07/09 22:37:48  bruno
  fixes

  Revision 1.63  2010/07/08 20:26:58  bruno
  nuke ampersands in the cvs comments

  Revision 1.62  2010/07/08 19:51:56  anoop
  CDATA the changelog field

  Revision 1.61  2010/06/30 17:37:32  anoop
  Overhaul of the naming system. We now support
  1. Multiple zone/domains
  2. Serving DNS for multiple domains
  3. No FQDN support for network names
     - FQDN must be split into name and domain.
     - Each piece information will go to a
       different table
  Hopefully, I've covered the basics, and not broken
  anything major

  Revision 1.60  2010/06/07 20:32:42  bruno
  the ipmi appliance is dead

  Revision 1.59  2010/05/20 20:59:10  bruno
  pulled my head of out of my keister and figured out how to pass parameters
  to 'rocks config host interface'

  Revision 1.58  2010/05/20 00:31:44  bruno
  gonna get some serious 'star power' off this commit.

  put in code to dynamically configure the static-routes file based on
  networks (no longer the hardcoded 'eth0').

  Revision 1.57  2010/03/25 00:30:39  bruno
  the start of the login appliance

  Revision 1.56  2010/03/04 19:32:48  mjk
  multicast is now just a class c (comments said so, but code did not)

  lower 255 multicast address are not supposed to route so this is a good
  choice as the default for the private network.  Other addresses can route
  so we leave this unconfigured.

  viz roll will need to add a route for cglx

  Revision 1.55  2009/12/02 21:30:28  mjk
  - Added ssh_use_dns attribute

  Revision 1.54  2009/08/28 21:00:33  bruno
  open the netmask up for multicast traffic

  Revision 1.53  2009/06/11 02:40:39  anoop
  - frontend "os" attribute missing. This can cause problems
  - fixed graph generation

  Revision 1.52  2009/06/05 19:57:16  bruno
  fix another 'interpreter' flag

  Revision 1.51  2009/05/20 23:50:38  anoop
  Re-Lockdown database access. But this time allow apache
  to access. Slightly better approach than my preceding
  boneheaded knee-jerk reaction.

  Revision 1.50  2009/05/20 23:32:44  anoop
  Too much lockdown can be a bad thing. If apache can't read my.cnf
  then kickstart files won't get generated.

  Revision 1.49  2009/05/20 09:20:12  mjk
  lock down perms

  Revision 1.48  2009/05/19 21:57:17  anoop
  Use the "interpreter" attribute instead of arg="--interpreter"

  Revision 1.47  2009/05/19 20:09:26  bruno
  only need to indicate 'interpreter' once

  Revision 1.46  2009/05/16 02:10:50  anoop
  Moved from RedHat MySQL to Rocks foundation-mysql
  rather forcefully.

  Turned off RedHat MySQL and cleanup of node xml files
  to remove all access to RedHat MySQL.

  Wordpress data and generic php mysql accesses are now
  directed to foundation-mysql. Here's hoping we got all
  of it.

  Revision 1.45  2009/05/01 19:06:48  mjk
  chimi con queso

  Revision 1.44  2009/04/23 23:46:11  mjk
  new foundation mysql needs --password flag

  Revision 1.43  2009/04/21 23:04:08  mjk
  - start the foundation-mysql DB and put tables there also
  - move sunos stuff out to generic
  - kill phpmyadmin stuff
  - next step is to move to foundation-mysql for the rocks command line
  - original mysql DB is still used and works for now

  Revision 1.42  2009/04/20 22:51:12  bruno
  cleanup dead code

  Revision 1.41  2009/03/30 19:29:50  anoop
  Merging xml files from Solaris Roll to the Linux roll.
  More files to follow

  Revision 1.40  2009/03/28 01:28:10  anoop
  Change the way managed_only flag is determined.
  Instead of hardcoding appliances to determine
  managed_only, use appliance and host attributes.

  Revision 1.39  2009/03/24 22:08:49  bruno
  not all entities should be added to a frontend VM

  Revision 1.38  2009/03/23 23:03:57  bruno
  can build frontends and computes

  Revision 1.37  2009/03/21 22:22:55  bruno
   - lights-out install of VM frontends with new node_rolls table
   - nuked 'site' columns and tables from database
   - worked through some bugs regarding entities

  Revision 1.36  2009/03/13 20:48:26  bruno
  nuke another Node_Hostname

  Revision 1.35  2009/03/13 16:41:00  bruno
  added starting 'post' tag

  Revision 1.34  2009/03/13 00:02:59  mjk
  - checkpoint for route commands
  - gateway is dead (now a default route)
  - removed comment rows from schema (let's see what breaks)
  - removed short-name from appliance (let's see what breaks)
  - dbreport static-routes is dead

  Revision 1.33  2009/03/04 19:06:29  bruno
  put site attrs in database

  Revision 1.32  2009/02/09 23:30:36  bruno
  use long passwords

  Revision 1.31  2009/01/23 21:50:23  bruno
  var tags converted to entities

  Revision 1.30  2009/01/08 23:36:01  mjk
  - rsh edge is conditional (no more uncomment crap)
  - add global_attribute commands (list, set, remove, dump)
  - attributes are XML entities for kpp pass (both pass1 and pass2)
  - attributes are XML entities for kgen pass (not used right now - may go away)
  - some node are now interface=public

  Revision 1.29  2008/10/18 00:55:45  mjk
  copyright 5.1

  Revision 1.28  2008/03/06 23:41:30  mjk
  copyright storm on

  Revision 1.27  2007/07/04 01:25:54  phil
  Add the base rocks-dist distribution -before- adding the basic appliances

  Revision 1.26  2007/07/03 17:58:06  phil
  actually apply the apache password

  Revision 1.25  2007/07/03 04:58:42  phil
  Add a password for apache access to the database.
  Randomly generate password and store in /root/.my.cnf.
  Modify rocks.py and sql.py to read the password, if available

  Revision 1.24  2007/06/25 20:19:01  bruno
  need to execute set commands for public interface

  Revision 1.23  2007/06/23 04:03:18  mjk
  mars hill copyright

  Revision 1.22  2007/06/18 23:09:17  bruno
  new 'rocks add host interface' syntax

  Revision 1.21  2007/06/13 20:25:00  bruno
  put a network address in for the subnet, not an IP address

  Revision 1.20  2007/06/12 01:10:41  mjk
  - 'rocks add subnet' is now 'rocks add network'
  - added set network subnet|netmask
  - added list network
  - other cleanup

  Revision 1.19  2007/06/09 00:29:17  anoop
  Using apache rather than root to populate the database. user "apache" is
  already created at this point.
  Already tested, and works in an expected manner.

  Revision 1.18  2007/06/07 17:51:40  anoop
  No more rocks add host new. Now it's just rocks add host.

  Revision 1.17  2007/05/30 23:32:13  anoop
  The adding of compute nodes and NAS appliance information is moved
  from the hpc roll to the base roll. This seems to be a little more
  appropriate.

  Revision 1.16  2007/05/30 23:27:16  anoop
  Moved the security information that apache uses to log into mysql to the
  database.xml file.
  Schema changed slightly to clean column names

  Main changes are the use of command line tools to manipulate the database
  rather than using sql syntax directly. Still in beta stage.

  Revision 1.15  2007/05/30 19:46:08  bruno
  use the rocks command line to populate the distributions database

  Revision 1.14  2007/05/11 23:56:02  bruno
  'rocks add appliance' retooled for latest rocks command line

  Revision 1.13  2007/04/12 19:48:05  bruno
  added command line: 'rocks add/list/remove appliance'

  updated base, hpc, pvfs2 and viz rolls to use new command line.

  Revision 1.12  2006/09/13 23:08:54  bruno
  permission cleanup

  Revision 1.11  2006/07/06 23:53:17  bruno
  stripped out old upgrade procedure

  Revision 1.10  2006/06/21 03:09:53  bruno
  updates to put the frontend networking info in the database just like
  a compute node

  Revision 1.9  2006/06/05 17:57:33  bruno
  first steps towards 4.2 beta

  Revision 1.8  2005/05/25 01:04:25  fds
  Fixed sql syntax error

  Revision 1.7  2005/05/23 23:59:21  fds
  Frontend Restore

  Revision 1.6  2005/05/11 06:44:39  phil
  Added an options line to the networks table
  Added explicit fields for all sql inserts

  Revision 1.5  2005/04/28 00:31:32  mjk
  removed nettools, should be on birn roll

  Revision 1.4  2005/04/28 00:27:23  mjk
  removed frontend-path

  Revision 1.3  2005/04/06 17:55:03  mjk
  fix entry point in graph for frontend

  Revision 1.2  2005/03/11 04:33:37  bruno
  vi error

  and a new way to do passwords in mysql

  Revision 1.1  2005/03/04 01:40:04  mjk
  massive graph cleanup

  Revision 1.1  2005/03/01 00:22:26  mjk
  moved to base roll

  Revision 1.12  2005/02/18 17:15:48  bruno
  nuke the everything appliance -- no longer used

  Revision 1.11  2005/02/15 22:58:52  mjk
  dtd is gone

  Revision 1.10  2004/10/04 18:59:41  fds
  Keep a copy of the old SQL dump in /root (protected with permissions).

  Revision 1.9  2004/07/15 18:54:22  fds
  Tweak to javascript.

  Revision 1.8  2004/06/21 20:36:19  fds
  A born-on date.

  Revision 1.7  2004/06/16 23:55:22  fds
  Fixed https link (suggested by Christophe Beaumont), and fixed
  post tags.

  Revision 1.6  2004/05/28 23:25:23  bruno
  put the clusterold initialization after we write the new database

  Revision 1.5  2004/04/26 20:27:56  fds
  Safer Mysql. As Eric D Christensen pointed out, it is easy for users to
  accidentally disrupt the system by altering the database. We protect from
  outside menaces, but allow read-write access to anyone from localhost.

  This protects read-write access with SSL and passwords, like our wiki. It
  is not close to being secure, since the -uapache is an option, but it
  1) Prevents accidental changes from users via the web-interface, and
  2) Allows admins to access the database safely over the wide-area.

  I have also made a read-only access link, which is accessible for all users
  but does not allow modification. In addition, users from localhost can
  get read-only access from the command line without specifying -uapache. This
  is intended to protect against casual mistakes only.

  Left to the next release: a secure and easy way for kcgi to access the
  database as user apache.

  Revision 1.4  2004/04/14 02:50:33  bruno
  cleanup on loader.c regarding central installs

  can now do secure ekv for frontends

  initial cluster database needs 'module' initialized in networks table

  Revision 1.3  2004/04/12 18:19:06  bruno
  kickstart from any network, even if the node has different types of
  network cards

  Revision 1.2  2004/03/24 23:37:30  fds
  Everything appliance type for building updates, etc. Linked into graph
  via hpc roll, but CANNOT reside there (rollRPMS.py will include everything
  into the roll).
  An everything appliance is a compute node with all available packages
  installed.

  Revision 1.1  2004/03/08 21:01:23  mjk
  *** empty log message ***

  Revision 1.34  2004/02/06 00:43:55  fds
  Schema migration.

  Revision 1.33  2004/02/04 17:39:38  bruno
  on what interface do you want to install?

  Revision 1.32  2004/02/03 20:00:35  mjk
  decolorize

  Revision 1.31  2004/01/30 04:53:42  mjk
  colorize

  Revision 1.30  2003/12/19 16:38:55  bruno
  fix for frontend upgrade

  Revision 1.29  2003/12/19 12:58:01  bruno
  fix for frontend upgrade regarding updating the hostname in /etc/auto.home

  Revision 1.28  2003/12/17 01:36:08  bruno
  turn off nettools appliance from public

  Revision 1.27  2003/11/12 19:41:19  mjk
  rollback from bad BIRN commit

  Revision 1.25  2003/10/30 23:07:10  bruno
  added build host appliance

  Revision 1.24  2003/10/26 03:39:53  vrowley
  First attempt at adding new appliance for BIRN

  Revision 1.23  2003/08/26 22:44:20  mjk
  - File tag now takes "expr" attribute (command evaluation)
  - Conversion of old code to file tags
  - Added media-server (used to be server)
  - Killed replace-server on the hpc roll
  - Updated Server database membership (now a media-server)
  - Added Public field to the membership table
  - Insert-ethers only allows a subset of memberships (Public ones) to be
    inserted.
  - Added getArch() to Application class
  - Kickstart trinity (kcgi,kpp,kgen) all updated self.arch initial value

  Revision 1.22  2003/08/11 18:00:12  fds
  Putting public hostname as an alias for 10.1.1.1 is not right.

  Revision 1.21  2003/07/23 18:27:54  bruno
  added server and client

  Revision 1.20  2003/07/16 20:10:41  bruno
  changed to new 'file' tag

  Revision 1.19  2003/07/16 17:21:17  fds
  Only add FQDN frontend alias if necessary

  Revision 1.18  2003/07/10 15:37:02  bruno
  make mysql doesn't stop during install

  Revision 1.17  2003/07/07 20:09:05  bruno
  new for rolls

  Revision 1.16  2003/06/25 21:01:54  fds
  VARCHAR fields have a max length of 255.

  Revision 1.15  2003/06/24 20:43:23  fds
  Frontend FQDN is only an alias.

  Revision 1.14  2002/12/21 02:04:07  bruno
  first stab at frontend patching

  Revision 1.13  2002/11/13 22:20:00  mjk
  ia64 changes

  Revision 1.12  2002/11/05 02:09:07  phil
  Add NAS functionality that looks like a compute node (but no
  PBS, SGE, or autopartitioning)

  Revision 1.11  2002/10/16 16:39:34  bruno
  more fixes

  Revision 1.10  2002/10/15 23:33:42  fds
  MySQL root password identical to frontend root password.

  Revision 1.9  2002/10/15 19:56:07  mjk
  Myrinet switches are now called 'myri'

  Revision 1.8  2002/10/04 17:36:03  fds
  Inserting 'Info' components from site.xml, and noe the apache user cannot drop or alter tables in the database.

  Revision 1.7  2002/10/01 21:40:48  bruno
  more fixes for 2.3

  Revision 1.6  2002/08/31 00:19:58  bruno
  upgrade fixes

  Revision 1.5  2002/08/21 23:58:39  bruno
  inching closer to a release

  Revision 1.4  2002/08/16 00:38:08  bruno
  latest update changes

  Revision 1.3  2002/07/11 16:14:36  bruno
  more changes for 7.3 CD boot for a frontend

  Revision 1.2  2002/07/03 23:33:11  bruno
  7.3 fixes

  Revision 1.1  2002/06/24 21:31:09  mjk
  Static cluster structure.
  Do not refer to live database for table structure.
  </changelog>


<!-- Copy the site.attrs file. -->
<post arg="--nochroot" os='linux'>
cat /tmp/site.attrs  | \
	sed -e '/^Kickstart_PrivateRootPassword/d' > \
	/mnt/sysimage/tmp/site.attrs
chmod 400 /mnt/sysimage/tmp/site.attrs
cp /tmp/rolls.xml /mnt/sysimage/tmp

</post>
<!--
	Solaris specific. This will populate the database
	attributes table from the attributes table on the
	frontend. Since we don't do Solaris frontends yet
	we can get away with this.
-->
<post os='sunos'>
<file name='/tmp/site.attrs'>
<eval>/opt/rocks/bin/rocks report host attr &hostname;</eval>
</file>
</post>

<post interpreter="/opt/rocks/bin/python">

import os.path

if os.path.exists('/tmp/site.attrs'):
	file = open('/tmp/site.attrs', 'r')
	for line in file.readlines():
		l = line.split(':', 1)
		if len(l) == 2:
			#
			# key/value pairs
			#

			#
			# there are some attributes that don't belong in the
			# database
			#
			key = l[0].strip()

			if key in [ 'hostname', 'rack', 'rank', 'os' ]:
				continue

			v = l[1].strip()
			value = ''
			for i in v:
				if i == "'":
					value += "'"
					value += '"'
					value += "\\'"
					value += '"'
					value += "'"
				else:
					value += i
			
			os.system("/opt/rocks/bin/rocks set attr '%s' '%s'"
				% (key, value))

	file.close()

</post>

<post>

<!-- insert the base distributions into the database -->
/opt/rocks/bin/rocks add distribution rocks-dist 

<!-- insert the base appliances into the database -->

/opt/rocks/bin/rocks add appliance frontend membership=Frontend node=server \
	public=no
/opt/rocks/bin/rocks add appliance compute  membership=Compute node=compute
/opt/rocks/bin/rocks add appliance nas      membership='NAS Appliance' node=nas 
/opt/rocks/bin/rocks add appliance network  membership='Ethernet Switch'
/opt/rocks/bin/rocks add appliance power    membership='Power Distribution Unit'

<!--	Set managed attribute for appliances.
	This determines whether the appliances
	can be ssh'ed into for running management
	commands
-->

/opt/rocks/bin/rocks set appliance attr frontend managed false
/opt/rocks/bin/rocks set appliance attr network	 managed false
/opt/rocks/bin/rocks set appliance attr power	 managed false
/opt/rocks/bin/rocks set appliance attr compute	 managed true
/opt/rocks/bin/rocks set appliance attr nas	 managed true

<!--
	set the compute appliance to be an execution host, but not a submit
	host. this is used to configure the queueing system (e.g., SGE or PBS).
-->

/opt/rocks/bin/rocks set appliance attr compute exec_host true
/opt/rocks/bin/rocks set appliance attr compute submit_host false

<!-- networks -->

/opt/rocks/bin/rocks add network private	\
	subnet=&Kickstart_PrivateNetwork;	\
	netmask=&Kickstart_PrivateNetmask;	\
	dnszone=&Kickstart_PrivateDNSDomain;	\
	servedns=true

/opt/rocks/bin/rocks add network public		\
	subnet=&Kickstart_PublicNetwork;	\
	netmask=&Kickstart_PublicNetmask;	\
	dnszone=&Kickstart_PublicDNSDomain;	\
	servedns=false

<!--
	set the frontend's primary network to be the public network. this
	network will be used to generate the hostname for the frontend.
-->
/opt/rocks/bin/rocks set appliance attr frontend primary_net public

</post>

<post os='linux'>	
<!-- frontend host -->

/opt/rocks/bin/rocks "add host" &Kickstart_PrivateHostname; \
	membership=Frontend rack=0 rank=0

/opt/rocks/bin/rocks set host attr &Kickstart_PrivateHostname; \
	attr='os' value='linux'

<!-- routes
	multicast (bottom 255 addresses only)
	broadcast
	default gateway (frontend)
	default gateway (backend nodes)
	frontend public interface over private network
-->
/opt/rocks/bin/rocks add route 224.0.0.0 private netmask=255.255.255.0

/opt/rocks/bin/rocks add route 255.255.255.255 private netmask=255.255.255.255

/opt/rocks/bin/rocks add host route &Kickstart_PrivateHostname; 0.0.0.0 \
	&Kickstart_PublicGateway; netmask=0.0.0.0

/opt/rocks/bin/rocks add route 0.0.0.0 \
	&Kickstart_PrivateGateway; netmask=0.0.0.0

/opt/rocks/bin/rocks add route &Kickstart_PublicAddress; \
	&Kickstart_PrivateAddress; netmask=255.255.255.255
	
<!-- frontend eth0 -->
/opt/rocks/bin/rocks add host interface &Kickstart_PrivateHostname; &Kickstart_PrivateInterface; 

/opt/rocks/bin/rocks set host interface subnet &Kickstart_PrivateHostname; \
	&Kickstart_PrivateInterface; private

/opt/rocks/bin/rocks set host interface ip &Kickstart_PrivateHostname; \
	&Kickstart_PrivateInterface; &Kickstart_PrivateAddress;

/opt/rocks/bin/rocks set host interface name &Kickstart_PrivateHostname; \
	&Kickstart_PrivateInterface; &Kickstart_PrivateHostname;

<!-- SSH settings -->

/opt/rocks/bin/rocks set attr ssh_use_dns true


</post>

<post os='linux' arg="--nochroot">
cp /tmp/interfaces /mnt/sysimage/tmp
</post>

<post os='linux' interpreter="/opt/rocks/bin/python">
import sys
import os
import string

ifaces = []
macs = []
modules = []
flags = []
nifs = 0

file = open('/tmp/interfaces', 'r')

macstr = 'X-RHN-Provisioning'
for line in file.readlines():
	l = string.split(line)

	if len(l) > 3 and l[0][0:len(macstr)] == macstr:
		nifs = nifs + 1
		tag = l[0][:-1]
		iface = l[1]
		macaddr = l[2]
		module = l[3]
                
		ks = ''
		if iface == '&Kickstart_PrivateInterface;':
			ks = 'ks'

		ifaces.append(iface)
		macs.append(macaddr)
		modules.append(module)
		flags.append(ks)

file.close()

if nifs == 1:
	# build a virtual interface for the private Network
	ifaces.append("%s:0" % ifaces[0])
	macs.append('')
	modules.append('none')
	flags.append('ks')

os.system('/opt/rocks/bin/rocks config host interface localhost iface="%s" \
	mac="%s" module="%s" flag="%s"' % (','.join(ifaces), ','.join(macs), \
	','.join(modules), ','.join(flags)))
</post>


<post os='linux'>
<!-- now assign public network info to public -->
/opt/rocks/bin/rocks add host interface &Kickstart_PrivateHostname; &Kickstart_PublicInterface;

/opt/rocks/bin/rocks set host interface subnet &Kickstart_PrivateHostname; \
	&Kickstart_PublicInterface; public

/opt/rocks/bin/rocks set host interface ip &Kickstart_PrivateHostname; \
	&Kickstart_PublicInterface; &Kickstart_PublicAddress;

/opt/rocks/bin/rocks set host interface name  &Kickstart_PrivateHostname; \
	&Kickstart_PublicInterface; &Kickstart_PrivateHostname;
</post>

<post>
<!-- 
Enter information for HttpRoot, HttpConf, and HttpConfigDirExt
for Linux and Solaris. This controls the Http Configuration files
and directories on the two OSes. These values are used in apache.xml
-->
/opt/rocks/bin/rocks set os attr linux HttpRoot "/var/www/html"
/opt/rocks/bin/rocks set os attr sunos HttpRoot "/var/apache2/htdocs"

/opt/rocks/bin/rocks set os attr linux HttpConf "/etc/httpd/conf"
/opt/rocks/bin/rocks set os attr sunos HttpConf "/etc/apache2"

/opt/rocks/bin/rocks set os attr linux HttpConfigDirExt "/etc/httpd/conf.d"
/opt/rocks/bin/rocks set os attr sunos HttpConfigDirExt "/etc/apache2"

/opt/rocks/bin/rocks set os attr linux RootDir "/root"
/opt/rocks/bin/rocks set os attr sunos RootDir "/"
</post>

</kickstart>
